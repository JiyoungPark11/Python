# ------------------------------------------------
# DFS 예제
# graph = 인접 리스트 형태의 그래프 데이터
# v = 현재 방문할 노드 번호
# visited = 방문 여부를 기록하는 리스트
# ------------------------------------------------

def dfs(graph, v, visited):
    # 현재 노드v를 방문했다고 표시
    visited[v] = True
    # 방문한 노드의 번호를 출력
    print(v, end=' ')
    # graph[v]에 저장된 인접 노드들을 하나씩 확인하면서,
    for i in graph[v]:
        if not visited[i]: #아직 방문하지 않은 노드라면
            dfs(graph, i, visited) # dfs()를 재귀적으로 호출하여 깊이 탐색
            

# 각 인덱스 i는 노드 번호를 의미하고, 해당 인덱스의 리스트는 i번 노드와 연결된 노드들의 리스트
# 예를 들어:
# graph[1] = [2, 3, 8] → 1번 노드는 2, 3, 8번 노드와 연결됨
# graph[3] = [1, 4, 5] → 3번 노드는 1, 4, 5번 노드와 연결됨
graph = [
    [],
    [2, 3, 8],
    [1, 7],
    [1, 4, 5],
    [3, 5],
    [3, 4],
    [7],
    [2, 6, 8],
    [1, 7]
]

# 각 노드가 방문된 정보를 리스트 자료형으로 표현(1차원 리스트) > 인덱스 1부터 8까지의 노드가 존재하므로, 크기가 9인 리스트를 생성 (0번 인덱스는 사용하지 않음)
# False로 초기화하여 처음에는 모든 노드가 방문되지 않은 상태
visited = [False] * 9

dfs(graph, 1, visited)